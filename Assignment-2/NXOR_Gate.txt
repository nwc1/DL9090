# BQ1 - XNOR
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.optimizers import Adam

X = np.array([[0, 0],
              [0, 1],
              [1, 0],
              [1, 1]])

y = np.array([[1],
              [0],
              [0],
              [1]])

model = Sequential()
model.add(Dense(8, activation='relu', input_shape=(2,)))
model.add(Dense(4, activation='relu'))
model.add(Dense(1, activation='sigmoid'))

model.compile(optimizer=Adam(learning_rate=0.01),
              loss='binary_crossentropy',
              metrics=['accuracy'])

history = model.fit(X, y, epochs=50, verbose=1)

loss, accuracy = model.evaluate(X, y, verbose=0)
print(f'\nLoss: {loss:.4f}, Accuracy: {accuracy:.4f}')

predictions = model.predict(X)
predictions = np.round(predictions)

print("\nPredictions:")
for i in range(len(X)):
    print(f"Input: {X[i]} - Predicted Output: {predictions[i][0]}")

import matplotlib.pyplot as plt

plt.figure(figsize=(12, 5))

plt.subplot(1, 2, 1)
plt.plot(history.history['loss'])
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.title('Training Loss')

plt.subplot(1, 2, 2)
plt.plot(history.history['accuracy'])
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.title('Training Accuracy')

plt.show()
